INFO: Starting training:
        Epochs:          5
        Batch size:      1
        Learning rate:   1e-05
        Training size:   4580
        Validation size: 508
        Checkpoints:     True
        Device:          cuda
        Images scaling:  0.5
        Mixed Precision: True
Epoch 1/5:   0%|                                                                                                                        | 0/4580 [00:18<?, ?img/s]
Traceback (most recent call last):
  File "train.py", line 212, in <module>
    train_model(
  File "train.py", line 101, in train_model
    masks_pred = model(images)
  File "/media/breeze/dev/Mf_Cls/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/media/breeze/dev/Mf_Cls/unet/unet_model.py", line 33, in forward
    x = self.up3(x, x2)
  File "/media/breeze/dev/Mf_Cls/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/media/breeze/dev/Mf_Cls/unet/unet_parts.py", line 68, in forward
    return self.conv(x)
  File "/media/breeze/dev/Mf_Cls/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/media/breeze/dev/Mf_Cls/unet/unet_parts.py", line 25, in forward
    return self.double_conv(x)
  File "/media/breeze/dev/Mf_Cls/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/media/breeze/dev/Mf_Cls/venv/lib/python3.8/site-packages/torch/nn/modules/container.py", line 139, in forward
    input = module(input)
  File "/media/breeze/dev/Mf_Cls/venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/media/breeze/dev/Mf_Cls/venv/lib/python3.8/site-packages/torch/nn/modules/batchnorm.py", line 168, in forward
    return F.batch_norm(
  File "/media/breeze/dev/Mf_Cls/venv/lib/python3.8/site-packages/torch/nn/functional.py", line 2438, in batch_norm
    return torch.batch_norm(
RuntimeError: CUDA out of memory. Tried to allocate 38.00 MiB (GPU 0; 1.96 GiB total capacity; 1.24 GiB already allocated; 22.38 MiB free; 1.31 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "train.py", line 222, in <module>
    except torch.cuda.OutOfMemoryError:
AttributeError: module 'torch.cuda' has no attribute 'OutOfMemoryError'